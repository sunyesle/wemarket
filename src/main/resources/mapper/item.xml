<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sys.market.mapper.ItemMapper">

    <select id="findItemById" parameterType="int" resultType="com.sys.market.entity.Item">
        SELECT i.id, i.user_id, i.price, i.title, i.content, i.create_date, i.update_date, i.status, i.category_id,
               item.rating rating,
               u.nickname nickname,
               a.name address,
               c.name category,
               count(if(offer.id is not null, offer.id, null)) offer_count
        FROM (
            SELECT item.id, item.user_id, IFNULL(AVG(r.rating), 0) rating
            from item
            LEFT OUTER JOIN review r ON item.user_id = r.user_id
            WHERE item.id = #{id} AND item.delete_date IS NULL
        )item
        JOIN item i ON item.id = i.id
        JOIN user u ON i.user_id = u.id
        JOIN address a ON u.address_code = a.code
        JOIN item_category c ON i.category_id = c.id
        LEFT OUTER JOIN offer ON item.id = offer.item_id
        GROUP BY i.id
    </select>

    <select id="selectItemList" parameterType="com.sys.market.dto.criteria.ItemSearchCriteria" resultType="com.sys.market.entity.Item">
        SELECT item.id, item.user_id, item.category_id, item.price, item.title, item.content, item.create_date, item.update_date, item.delete_date, item.status,
        i.nickname, i.address, i.category,
        item_image.path thumb_image,
        count(if(offer.id is not null, offer.id, null)) offer_count
        FROM
        (
        SELECT item.id id, u.nickname nickname, a.name address, c.name category
        FROM item
        JOIN user u ON item.user_id = u.id
        JOIN address a ON u.address_code = a.code
        JOIN item_category c ON item.category_id = c.id
        <include refid="searchItem"/>
        ORDER BY item.id DESC
        LIMIT ${startRow -1}, ${pageSize}
        ) i
        JOIN item ON item.id = i.id
        LEFT OUTER JOIN item_image ON item.thumb_image_id = item_image.id
        LEFT OUTER JOIN offer ON item.id = offer.item_id
        GROUP BY item.id
    </select>

    <select id="selectItemCount" parameterType="com.sys.market.dto.criteria.ItemSearchCriteria" resultType="int">
        SELECT COUNT(*) FROM item
        JOIN user u ON item.user_id = u.id
        JOIN item_category c ON item.category_id = c.id
        <include refid="searchItem"/>
    </select>

    <sql id="searchItem">
        WHERE item.delete_date IS NULL
        <if test="minPrice != null">
            AND item.price <![CDATA[>]]> #{minPrice}
        </if>
        <if test="maxPrice != null">
            AND item.price <![CDATA[<]]> #{maxPrice}
        </if>
        <if test="searchKeyword != null and searchKeyword != '' and searchTarget != null">
            <choose>
                <when test="searchTarget.name() == 'TITLE'">
                    AND item.title like CONCAT('%', #{searchKeyword}, '%')
                </when>
                <when test="searchTarget.name() == 'TITLE_CONTENT'">
                    AND (item.title LIKE CONCAT('%', #{searchKeyword} ,'%') OR item.content LIKE CONCAT('%', #{searchKeyword}, '%'))
                </when>
                <when test="searchTarget.name() == 'USER'">
                    AND item.user_id = #{searchKeyword}
                </when>
            </choose>
        </if>
        <if test="categoryIdList != null and !categoryIdList.isEmpty()">
            AND item.category_id IN(
            <foreach collection="categoryIdList" item="categoryId" separator=",">
                #{categoryId}
            </foreach>
            )
        </if>
        <if test="itemStatusList != null and !itemStatusList.isEmpty()">
            AND item.status IN(
            <foreach collection="itemStatusList" item="itemStatus" separator=",">
                #{itemStatus}
            </foreach>
            )
        </if>
    </sql>

    <insert id="insertItem" parameterType="com.sys.market.entity.Item" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO item (user_id, category_id, price, title, content)
        VALUES (#{userId}, #{categoryId}, #{price}, #{title}, #{content})
    </insert>

    <update id="updateItem" parameterType="com.sys.market.entity.Item">
        UPDATE item
        SET
        <if test="categoryId != null">category_id = #{categoryId},</if>
        <if test="price != null">price = #{price},</if>
        <if test="title != null">title = #{title},</if>
        <if test="content != null">content = #{content},</if>
        <if test="status != null">status = #{status},</if>
        update_date = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateItemThumbImageId">
        UPDATE item
        SET
        thumb_image_id =
        (
            SELECT item_image.id
            FROM item_image
            WHERE item_id = #{id} AND idx=0
        )
        WHERE id = #{id}
    </update>

    <delete id="deleteItem">
        UPDATE item
        SET delete_date = NOW()
        WHERE id = #{id}
    </delete>
</mapper>